{"ast":null,"code":"var _jsxFileName = \"D:\\\\ita-2019-react\\\\New folder (2)\\\\game-app\\\\src\\\\hackertyper\\\\hackertype.js\";\nimport React from \"react\";\nimport mytext from \"./text.js\";\nimport \"./style.css\";\n\nclass Cursorblink extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cursor: \"|\"\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 500);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      cursor: this.state.cursor === \"|\" ? !this.state.cursor : \"|\"\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.cursor);\n  }\n\n}\n\nclass Hackertype extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: [],\n      joinText: \"\",\n      keyDownCount: 0,\n      textDiv: null\n    };\n\n    this.setTextDivRef = element => {\n      this.textDiv = element;\n    };\n  }\n\n  onKeyPressed(e) {\n    const joinText = [mytext[this.state.keyDownCount], mytext[this.state.keyDownCount + 1], mytext[this.state.keyDownCount + 2]];\n    this.setState(state => ({\n      keyDownCount: state.keyDownCount + 3,\n      text: [...state.text, joinText]\n    }));\n  }\n\n  componentDidMount() {\n    this.textDiv.focus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      ref: this.setTextDivRef,\n      className: \"hackerType\",\n      onKeyDown: e => this.onKeyPressed(e),\n      tabIndex: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.text, React.createElement(Cursorblink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Hackertype;","map":{"version":3,"sources":["D:/ita-2019-react/New folder (2)/game-app/src/hackertyper/hackertype.js"],"names":["React","mytext","Cursorblink","Component","constructor","props","state","cursor","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","setState","render","Hackertype","text","joinText","keyDownCount","textDiv","setTextDivRef","element","onKeyPressed","e","focus"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,aAAP;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CAAC,MAAM,KAAKC,IAAL,EAAP,EAAoB,GAApB,CAA1B;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKJ,OAAN,CAAb;AACD;;AAEDE,EAAAA,IAAI,GAAG;AACL,SAAKG,QAAL,CAAc;AACZP,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,KAAsB,GAAtB,GAA4B,CAAC,KAAKD,KAAL,CAAWC,MAAxC,GAAiD;AAD7C,KAAd;AAGD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WAAO,0CAAG,KAAKT,KAAL,CAAWC,MAAd,CAAP;AACD;;AAxBuC;;AA2B1C,MAAMS,UAAN,SAAyBhB,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXW,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,YAAY,EAAE,CAHH;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;;AAMA,SAAKC,aAAL,GAAqBC,OAAO,IAAI;AAC9B,WAAKF,OAAL,GAAeE,OAAf;AACD,KAFD;AAGD;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,UAAMN,QAAQ,GAAG,CACfjB,MAAM,CAAC,KAAKK,KAAL,CAAWa,YAAZ,CADS,EAEflB,MAAM,CAAC,KAAKK,KAAL,CAAWa,YAAX,GAA0B,CAA3B,CAFS,EAGflB,MAAM,CAAC,KAAKK,KAAL,CAAWa,YAAX,GAA0B,CAA3B,CAHS,CAAjB;AAMA,SAAKL,QAAL,CAAcR,KAAK,KAAK;AACtBa,MAAAA,YAAY,EAAEb,KAAK,CAACa,YAAN,GAAqB,CADb;AAEtBF,MAAAA,IAAI,EAAE,CAAC,GAAGX,KAAK,CAACW,IAAV,EAAgBC,QAAhB;AAFgB,KAAL,CAAnB;AAID;;AAEDV,EAAAA,iBAAiB,GAAG;AAClB,SAAKY,OAAL,CAAaK,KAAb;AACD;;AAEDV,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,GAAG,EAAE,KAAKM,aADZ;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,SAAS,EAAEG,CAAC,IAAI,KAAKD,YAAL,CAAkBC,CAAlB,CAHlB;AAIE,MAAA,QAAQ,EAAC,GAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKlB,KAAL,CAAWW,IANd,EAOE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA3CsC;;AA8CzC,eAAeD,UAAf","sourcesContent":["import React from \"react\";\r\nimport mytext from \"./text.js\";\r\nimport \"./style.css\";\r\n\r\nclass Cursorblink extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cursor: \"|\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => this.tick(), 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      cursor: this.state.cursor === \"|\" ? !this.state.cursor : \"|\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <>{this.state.cursor}</>;\r\n  }\r\n}\r\n\r\nclass Hackertype extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: [],\r\n      joinText: \"\",\r\n      keyDownCount: 0,\r\n      textDiv: null\r\n    };\r\n    this.setTextDivRef = element => {\r\n      this.textDiv = element;\r\n    };\r\n  }\r\n\r\n  onKeyPressed(e) {\r\n    const joinText = [\r\n      mytext[this.state.keyDownCount],\r\n      mytext[this.state.keyDownCount + 1],\r\n      mytext[this.state.keyDownCount + 2]\r\n    ];\r\n\r\n    this.setState(state => ({\r\n      keyDownCount: state.keyDownCount + 3,\r\n      text: [...state.text, joinText]\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.textDiv.focus();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.setTextDivRef}\r\n        className=\"hackerType\"\r\n        onKeyDown={e => this.onKeyPressed(e)}\r\n        tabIndex=\"0\"\r\n      >\r\n        {this.state.text}\r\n        <Cursorblink />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hackertype;\r\n"]},"metadata":{},"sourceType":"module"}
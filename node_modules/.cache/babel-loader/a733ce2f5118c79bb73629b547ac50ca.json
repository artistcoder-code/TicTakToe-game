{"ast":null,"code":"import _slicedToArray from \"D:\\\\Programming\\\\ita-2019-react\\\\tictaktoe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nexport function calculateWinner(squares) {\n  const lines = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49], [50, 51, 52, 53, 54, 55, 56, 57, 58, 59], [60, 61, 62, 63, 64, 65, 66, 67, 68, 69], [70, 71, 72, 73, 74, 75, 76, 77, 78, 79], [80, 81, 82, 83, 84, 85, 86, 87, 88, 89], [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], [0, 10, 20, 30, 40, 50, 60, 70, 80, 90], [1, 11, 21, 31, 41, 51, 61, 71, 81, 91], [2, 12, 22, 32, 42, 52, 62, 72, 82, 92], [3, 13, 23, 33, 43, 53, 63, 73, 83, 93], [4, 14, 24, 34, 44, 54, 64, 74, 84, 94], [6, 16, 26, 36, 46, 56, 66, 76, 86, 96], [8, 18, 28, 38, 48, 58, 68, 78, 88, 98], [9, 19, 29, 39, 49, 59, 69, 79, 89, 99], [0, 11, 22, 33, 44, 55, 66, 77, 88, 99], [9, 18, 27, 36, 45, 54, 63, 72, 81, 90]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 10),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2],\n          d = _lines$i[3],\n          e = _lines$i[4],\n          f = _lines$i[5],\n          g = _lines$i[6],\n          j = _lines$i[7],\n          k = _lines$i[8],\n          m = _lines$i[9];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d] && squares[a] === squares[e] && squares[a] === squares[f] && squares[a] === squares[g] && squares[a] === squares[j] && squares[a] === squares[m] && squares[a] === squares[k]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["D:/Programming/ita-2019-react/tictaktoe/src/WinCombo.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","d","e","f","g","j","k","m"],"mappings":"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","sourcesContent":["export function calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\r\n    [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\r\n    [20, 21, 22, 23, 24, 25, 26, 27, 28, 29],\r\n    [30, 31, 32, 33, 34, 35, 36, 37, 38, 39],\r\n    [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\r\n    [50, 51, 52, 53, 54, 55, 56, 57, 58, 59],\r\n    [60, 61, 62, 63, 64, 65, 66, 67, 68, 69],\r\n    [70, 71, 72, 73, 74, 75, 76, 77, 78, 79],\r\n    [80, 81, 82, 83, 84, 85, 86, 87, 88, 89],\r\n    [90, 91, 92, 93, 94, 95, 96, 97, 98, 99],\r\n    [0, 10, 20, 30, 40, 50, 60, 70, 80, 90],\r\n    [1, 11, 21, 31, 41, 51, 61, 71, 81, 91],\r\n    [2, 12, 22, 32, 42, 52, 62, 72, 82, 92],\r\n    [3, 13, 23, 33, 43, 53, 63, 73, 83, 93],\r\n    [4, 14, 24, 34, 44, 54, 64, 74, 84, 94],\r\n    [6, 16, 26, 36, 46, 56, 66, 76, 86, 96],\r\n    [8, 18, 28, 38, 48, 58, 68, 78, 88, 98],\r\n    [9, 19, 29, 39, 49, 59, 69, 79, 89, 99],\r\n    [0, 11, 22, 33, 44, 55, 66, 77, 88, 99],\r\n    [9, 18, 27, 36, 45, 54, 63, 72, 81, 90]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c, d, e, f, g, j, k, m] = lines[i];\r\n    if (\r\n      squares[a] &&\r\n      squares[a] === squares[b] &&\r\n      squares[a] === squares[c] &&\r\n      squares[a] === squares[d] &&\r\n      squares[a] === squares[e] &&\r\n      squares[a] === squares[f] &&\r\n      squares[a] === squares[g] &&\r\n      squares[a] === squares[j] &&\r\n      squares[a] === squares[m] &&\r\n      squares[a] === squares[k]\r\n    ) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
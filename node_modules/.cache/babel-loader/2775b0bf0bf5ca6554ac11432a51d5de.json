{"ast":null,"code":"import _slicedToArray from \"D:\\\\ita-2019-react\\\\New folder (2)\\\\game-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\ita-2019-react\\\\New folder (2)\\\\game-app\\\\src\\\\Game.js\";\nimport React from \"react\";\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array.from({\n        length: 10\n      }).map(() => \"\"),\n      xNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xNext ? \"X\" : \"O\";\n    this.setState({\n      squares: squares,\n      xNext: !this.state.xNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xNext ? \"X\" : \"O\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: newGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"New Game\"), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nexport default Game;","map":{"version":3,"sources":["D:/ita-2019-react/New folder (2)/game-app/src/Game.js"],"names":["React","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","from","length","map","xNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","newGame","Game","lines","a","b","c"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      squares: Array.from({ length: 10 }).map(() => \"\"),\r\n      xNext: true\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const squares = this.state.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      squares: squares,\r\n      xNext: !this.state.xNext\r\n    });\r\n  }\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"button\" onClick={newGame}>\r\n          New Game\r\n        </button>\r\n\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}